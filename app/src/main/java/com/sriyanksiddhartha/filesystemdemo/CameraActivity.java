package com.sriyanksiddhartha.filesystemdemo;

import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.v4.content.FileProvider;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.Toast;

import java.io.File;
import java.io.IOException;


public class CameraActivity extends AppCompatActivity {

	private static final String TAG = CameraActivity.class.getSimpleName();

	private Uri mPhotoURI = null;		// Content URI for the Image File to be generated by FileProvider.
	private String mPhotoPath = null;	// Exact location of the Picture that'll be captured.
	private ImageView mImageView;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_camera);

		mImageView = (ImageView) findViewById(R.id.imvSnap);
	}

	public void takeSnap(View view) {
		
		Intent takeSnapIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
		if (takeSnapIntent.resolveActivity(getPackageManager()) != null) {

			File photoFile = null;	// The file where the Captured Pic will go
			try {
				photoFile = Utils.createImageFile();
			} catch (IOException e) {
				e.printStackTrace();
			}

			if (photoFile != null) {
				mPhotoPath = photoFile.getAbsolutePath();	// Save the path for future use
				mPhotoURI = FileProvider.getUriForFile(this, "com.sriyanksiddhartha.filesystemdemo.fileprovider", photoFile);
				takeSnapIntent.putExtra(MediaStore.EXTRA_OUTPUT, mPhotoURI);
				startActivityForResult(takeSnapIntent, 21);

				Log.i(TAG, "photo uri " + mPhotoURI);
				Log.i(TAG, "photo path " + mPhotoPath);
			}
		}
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {

		if (requestCode == 21 && resultCode == RESULT_OK) {
			Toast.makeText(CameraActivity.this, "Image Saved", Toast.LENGTH_SHORT).show();
			Utils.notifyGalleryAboutPic(CameraActivity.this, mPhotoPath); // Notify the Gallery about the Freshly Captured Pic
		}
	}

	/** Retrieve the captured image using {@link #mPhotoURI} which is our Content URI for the captured Image. */
	public void displayCapturedImage(View view) {

		Bitmap imageBitmap = null;
		if (mPhotoURI != null) {
			try {
				imageBitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), mPhotoURI);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		if (imageBitmap != null) {
			mImageView.setImageBitmap(Utils.getResizedBitmap(imageBitmap));
		}
	}
}
